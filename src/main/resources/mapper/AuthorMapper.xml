<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.bookbransaction.mapper.AuthorMapper">
  <resultMap id="BaseResultMap" type="com.example.bookbransaction.entity.Author">
    <id column="author_id" jdbcType="INTEGER" property="authorId" />
    <result column="author_name" jdbcType="VARCHAR" property="authorName" />
    <result column="location_id" jdbcType="INTEGER" property="locationId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_by" jdbcType="INTEGER" property="updateBy" />
    <association column="location_id" property="location" select="com.example.bookbransaction.mapper.LocationMapper.selectByPrimaryKey"/>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from author
    where author_id = #{authorId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.bookbransaction.entity.Author">
    <selectKey keyProperty="authorId" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into author (author_id, author_name, location_id, 
      create_time, create_by, update_time, 
      update_by)
    values (#{authorId,jdbcType=INTEGER}, #{authorName,jdbcType=VARCHAR}, #{locationId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.example.bookbransaction.entity.Author">
    update author
    set author_name = #{authorName,jdbcType=VARCHAR},
      location_id = #{locationId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=INTEGER}
    where author_id = #{authorId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select author_id, author_name, location_id, create_time, create_by, update_time, 
    update_by
    from author
    where author_id = #{authorId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select author_id, author_name, location_id, create_time, create_by, update_time, 
    update_by
    from author
  </select>
  <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
     select author_id, author_name, location_id, create_time, create_by, update_time,
    update_by
    from author
    where author_name like CONCAT('%',#{name,jdbcType=VARCHAR},'%')
  </select>
</mapper>